// Code generated by ent, DO NOT EDIT.

package user

import "github.com/popoffvg/async-arch/auth/ent/schema"

const (
	// Label holds the string label denoting the user type in the database.
	Label = "user"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldLogin holds the string denoting the login field in the database.
	FieldLogin = "login"
	// FieldPassword holds the string denoting the password field in the database.
	FieldPassword = "password"
	// FieldScopes holds the string denoting the scopes field in the database.
	FieldScopes = "scopes"
	// Table holds the table name of the user in the database.
	Table = "users"
)

// Columns holds all SQL columns for user fields.
var Columns = []string{
	FieldID,
	FieldLogin,
	FieldPassword,
	FieldScopes,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// LoginValidator is a validator for the "login" field. It is called by the builders before save.
	LoginValidator func(string) error
	// PasswordValidator is a validator for the "password" field. It is called by the builders before save.
	PasswordValidator func([]byte) error
	// DefaultScopes holds the default value on creation for the "scopes" field.
	DefaultScopes schema.Scope
	// ScopesValidator is a validator for the "scopes" field. It is called by the builders before save.
	ScopesValidator func(string) error
)
