// Code generated by ogen, DO NOT EDIT.

package ogent

import (
	"bytes"
	"context"
	"fmt"
	"io"
	"math"
	"math/big"
	"math/bits"
	"net"
	"net/http"
	"net/url"
	"regexp"
	"sort"
	"strconv"
	"strings"
	"sync"
	"time"

	"github.com/go-faster/errors"
	"github.com/go-faster/jx"
	"github.com/google/uuid"
	"github.com/ogen-go/ogen/conv"
	ht "github.com/ogen-go/ogen/http"
	"github.com/ogen-go/ogen/json"
	"github.com/ogen-go/ogen/otelogen"
	"github.com/ogen-go/ogen/uri"
	"github.com/ogen-go/ogen/validate"
	"go.opentelemetry.io/otel"
	"go.opentelemetry.io/otel/attribute"
	"go.opentelemetry.io/otel/codes"
	"go.opentelemetry.io/otel/metric"
	"go.opentelemetry.io/otel/trace"
)

// No-op definition for keeping imports.
var (
	_ = context.Background()
	_ = fmt.Stringer(nil)
	_ = strings.Builder{}
	_ = errors.Is
	_ = sort.Ints
	_ = http.MethodGet
	_ = io.Copy
	_ = json.Marshal
	_ = bytes.NewReader
	_ = strconv.ParseInt
	_ = time.Time{}
	_ = conv.ToInt32
	_ = uuid.UUID{}
	_ = uri.PathEncoder{}
	_ = url.URL{}
	_ = math.Mod
	_ = bits.LeadingZeros64
	_ = big.Rat{}
	_ = validate.Int{}
	_ = ht.NewRequest
	_ = net.IP{}
	_ = otelogen.Version
	_ = attribute.KeyValue{}
	_ = trace.TraceIDFromHex
	_ = otel.GetTracerProvider
	_ = metric.NewNoopMeterProvider
	_ = regexp.MustCompile
	_ = jx.Null
	_ = sync.Pool{}
	_ = codes.Unset
)

var _ Handler = UnimplementedHandler{}

// UnimplementedHandler is no-op Handler which returns http.ErrNotImplemented.
type UnimplementedHandler struct{}

// CreateTask implements createTask operation.
//
// Creates a new Task and persists it to storage.
//
// POST /tasks
func (UnimplementedHandler) CreateTask(ctx context.Context, req CreateTaskReq) (r CreateTaskRes, _ error) {
	return r, ht.ErrNotImplemented
}

// DeleteTask implements deleteTask operation.
//
// Deletes the Task with the requested ID.
//
// DELETE /tasks/{id}
func (UnimplementedHandler) DeleteTask(ctx context.Context, params DeleteTaskParams) (r DeleteTaskRes, _ error) {
	return r, ht.ErrNotImplemented
}

// ListTask implements listTask operation.
//
// List Tasks.
//
// GET /tasks
func (UnimplementedHandler) ListTask(ctx context.Context, params ListTaskParams) (r ListTaskRes, _ error) {
	return r, ht.ErrNotImplemented
}

// ListUserTasks implements listUserTasks operation.
//
// List attached Tasks.
//
// GET /users/{id}/tasks
func (UnimplementedHandler) ListUserTasks(ctx context.Context, params ListUserTasksParams) (r ListUserTasksRes, _ error) {
	return r, ht.ErrNotImplemented
}

// ReadTask implements readTask operation.
//
// Finds the Task with the requested ID and returns it.
//
// GET /tasks/{id}
func (UnimplementedHandler) ReadTask(ctx context.Context, params ReadTaskParams) (r ReadTaskRes, _ error) {
	return r, ht.ErrNotImplemented
}

// ReadTaskAssigned implements readTaskAssigned operation.
//
// Find the attached User of the Task with the given ID.
//
// GET /tasks/{id}/assigned
func (UnimplementedHandler) ReadTaskAssigned(ctx context.Context, params ReadTaskAssignedParams) (r ReadTaskAssignedRes, _ error) {
	return r, ht.ErrNotImplemented
}

// UpdateTask implements updateTask operation.
//
// Updates a Task and persists changes to storage.
//
// PATCH /tasks/{id}
func (UnimplementedHandler) UpdateTask(ctx context.Context, req UpdateTaskReq, params UpdateTaskParams) (r UpdateTaskRes, _ error) {
	return r, ht.ErrNotImplemented
}
